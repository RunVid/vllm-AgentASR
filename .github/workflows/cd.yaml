name: Continuous Deployment

on:
  workflow_dispatch:
    inputs:
      git_ref:
        description: 'Git reference (commit, branch, or tag)'
        required: true
        default: 'master'
      environment:
        description: 'Deployment environment (prod/staging)'
        required: true
        default: 'staging'
        type: choice
        options:
          - prod
          - staging

jobs:
  deploy:
    name: Deploy to Server ${{ matrix.server_id }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        server_id: ${{ github.event.inputs.environment == 'prod' && fromJSON('[1]') || fromJSON('[1]') }}
      fail-fast: false  # Continue deploying to other servers even if one fails
    env:
      SERVER_USER: ${{ github.event.inputs.environment == 'prod' && 'ubuntu' || 'ubuntu' }}
      SERVER_KEY: ${{ secrets.SERVER_ACTION_KEY }}
      SERVER_IP: ${{ github.event.inputs.environment == 'prod' && (matrix.server_id == 1 && secrets.PROD_SERVER_IP_1 || matrix.server_id == 2 && secrets.PROD_SERVER_IP_2 || secrets.PROD_SERVER_IP_3) || secrets.STAGING_SERVER_IP }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
      ENVIRONMENT: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.git_ref }}

      - name: Get commit ID
        id: get_commit_id
        run: |
          COMMIT_ID=$(git rev-parse HEAD)
          echo "COMMIT_ID=$COMMIT_ID" >> $GITHUB_ENV

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ env.SERVER_KEY }}

      - name: Sync code to Server ${{ matrix.server_id }}
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" . ${{ env.SERVER_USER }}@${{ env.SERVER_IP }}:~/deployment/vllm-AgentASR/

      - name: Build and run Docker image on Server ${{ matrix.server_id }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "
          echo ${{ env.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u bot19pine --password-stdin && \
          cd ~/deployment/vllm-AgentASR/deploy && \
          pwd && \
          export VERSION=${{ env.COMMIT_ID }} && \
          export ENVIRONMENT=${{ env.ENVIRONMENT }} && \
          export HF_TOKEN=${{ env.HF_TOKEN }} && \
          ./docker-build.sh && \
          ./docker-run.sh ${{ env.ENVIRONMENT }}"

      - name: Warmup services on Server ${{ matrix.server_id }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "
          cd ~/deployment/vllm-AgentASR/deploy && \
          ./warmup.sh ${{ env.ENVIRONMENT }}"

